AllCops:
    Exclude:
        - "*-core.rb"
        - "tmp/**"
        - "test/**"
        - "benchmark/*-core-opt-*.rb"
        - "benchmark/Dockerfile.*"

# "eval" is the swiss army knife
Security/Eval:
    Enabled: false

Security/MarshalLoad:
    Enabled: false

# "while true" loop is easy and fast
Lint/LiteralInCondition:
    Enabled: false
Lint/Loop:
    Enabled: false
Style/InfiniteLoop:
    Enabled: false

# `String#%` is a great invention of Ruby
Style/FormatString:
    EnforcedStyle: percent

# I hate frozen string literal
Style/FrozenStringLiteralComment:
    Enabled: false

# 10_000 looks dirty to me
Style/NumericLiterals:
    MinDigits: 6

# explicit return is sometimes good for consistency
Style/RedundantReturn:
    Enabled: false

# I like `foo {|x| bar(x) }` and `foo { bar }`
Style/SpaceInsideBlockBraces:
    EnforcedStyleForEmptyBraces: space
    SpaceBeforeBlockParameters: false

# `"foo#{bar}baz"` looks too dense to me
Style/SpaceInsideStringInterpolation:
    EnforcedStyle: space

# I consistently use double quotes
Style/StringLiterals:
    EnforcedStyle: double_quotes
Style/StringLiteralsInInterpolation:
    EnforcedStyle: double_quotes

# A trailing comma in array literal is super cool
Style/TrailingCommaInLiteral:
    Enabled: false

# I don't like this so much but virtually needed for ffi struct layout
Style/TrailingCommaInArguments:
    Enabled: false

# I don't want to fill my code with `.freeze`
Style/MutableConstant:
    Enabled: false

# I have no idea why this is prohibited...
Style/ParallelAssignment:
    Enabled: false

# Backrefs are indeed dirty, but `Regexp.last_match` is too verbose
Style/PerlBackrefs:
    Enabled: false

# I have forgotten `Kernel#fail`.
Style/SignalException:
    EnforcedStyle: only_raise

# I think `{|ary| ary.size }` is not so bad since its type is explicit
Style/SymbolProc:
    Enabled: false

# Wrapping a code is so bad?  Case-by-case.
Style/GuardClause:
    Enabled: false

# I use hyphen-separated case for script program.
Style/FileName:
    Exclude:
        - 'tools/*.rb'

# `'abc'.casecmp('ABC') == 0` looks very stupid to me
Performance/Casecmp:
    Enabled: false

# I don't care class/module size
Metrics/ClassLength:
    Max: 1000
Metrics/ModuleLength:
    Max: 1000

# I accept two-screen size (about 100 lines?)
Metrics/MethodLength:
    Max: 100
Metrics/BlockLength:
    Max: 100

# Don't worry, my terminal is big enough
Metrics/LineLength:
    Max: 120

# Code metrics is good, but I think the default is too strict...
Metrics/CyclomaticComplexity:
    Max: 20
Metrics/PerceivedComplexity:
    Max: 20
Metrics/AbcSize:
    Max: 100
Metrics/BlockNesting:
    Max: 5

# I like `x == 0`
Style/NumericPredicate:
    EnforcedStyle: comparison

# I like `foo1` and `foo_bar_1`
Style/VariableNumber:
    Enabled: false

# empty is empty
Style/EmptyMethod:
    Enabled: false
Lint/EmptyWhen:
    Enabled: false

# if-elsif-elsif... looks awkward to me
Style/EmptyCaseCondition:
    Enabled: false

